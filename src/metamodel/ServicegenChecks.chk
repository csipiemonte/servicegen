import csiserviceapp;
import typedef;
import servicedef;

extension template::ServicegenExtensions;



//ComponenteProdotto componente(ServiceDef this) :
//  eContainer;

/////////////////////////////////////
// vincoli sulle definizioni di tipi
/////////////////////////////////////

// TD1(ERROR): un qualsiasi tipo deve avere un nome
context Type ERROR "TD1: tutti i tipi definiti devono avere un nome" :
	this.name != null;
	
// TD2(ERROR): le feature di una entity devono avere un nome
context Entity ERROR "TD2: almeno una feature dell'entita' "+this.name+" non ha nome":
	(this.features.select(e|e.name==null).size)==0;
	
// TD3(ERROR): la feature di una entity deve avere un tipo
context Entity ERROR "TD3: almeno una feature dell'entita' "+this.name+" non ha tipo":
	(this.features.select(e|e.type==null).size)==0;
    
// TD4(ERROR): un csi datatype deve avere un codice tipo specificato
context CSIDatatype ERROR "TD4: ogni CSIDatatype deve avere un codice tipo specificato" :
    this.code!=null;

// TD5(ERROR): i tipi definiti in "baseTypes" possono essere o semplici o array di semplici
context BaseTypes ERROR "TD5: i tipi definiti a livello globale possono essere solo tipi semplici o array di tipi semplici" :
	(this.baseTypes.select(e|e.metaType==Entity).size==0)&&
	(this.baseTypes.select(e|e.metaType==TypedArray&&((TypedArray)e).componentType.metaType==Entity)).size==0&&
	(this.baseTypes.select(e|e.metaType==Exception).size==0);

// TD6(ERROR): i tipi definiti nei servizi possono solo essere entity o eccezioni o array di entity
context Types ERROR "TD6: i tipi definiti nel contesto di un servizio possono solo essere Entity o Array di entity o eccezioni" :
	this.types.select(e|e.metaType==CSIDatatype).size==0 &&
	this.types.select(e|e.metaType==TypedArray && ((TypedArray)e).componentType.metaType==CSIDatatype).size==0;
	
// TD7(ERROR): un typed array non può contenere classi eccezione nè tipi array
context TypedArray ERROR "TD7: un array tipato non può contenere eccezioni o tipi array annidati" :
    this.componentType.metaType!=Exception &&
    this.componentType.metaType!=TypedArray;

/////////////////////////////////////////
// vincoli sulla definizione di servizio
/////////////////////////////////////////

//context ServiceDef ERROR "Definizione duplicata di servizio con nome "+codServizio :
//    ((DocumentRoot)this.eRootContainer).model.serviceDefs.select(e|e.codServizio==codServizio).size==1;

// SD1: una definizione di servizio deve avere un nome
context ServiceDef ERROR "Codice servizio non specificato " :
	this.codServizio != null;

// SD2: deve essere definito almeno un binding
context ServiceDef ERROR "Deve essere definito almeno un binding " :
    this.bindings != null && bindings.size>0;

// SD3: codifica corretta del codice servizio: minuscola con underscore
context ServiceDef ERROR "Il codice servizio deve essere alfanumerico minuscolo e l'unico separatore ammesso è l'underscore" : 
     validateCodServ(this.codServizio);
     
// SD4: il tipo di ritorno deve essere CSIString in caso di operazione asincrona o pubsub (TODO!!)
context Operation ERROR "Un operazione asincrona (p2p o pubsub) deve avere tipo di ritorno CSIString" :
	(opType==OpTypeEnum::synch) ||
	(opType==OpTypeEnum::asynch || opType==OpTypeEnum::notify) && 
		(this.returnType.metaType==CSIDatatype && ((CSIDatatype)returnType).code==CSIDatatypeCodes::CSIString);

// SD5: un servizio pubblico non può avere ruoli associati
context ServiceDef ERROR "Un servizio con livello di securizzazione A0 non può avere Ruoli definiti" :
	(this.authLevel==AuthLevelEnum::A0 && this.roles.size==0) || authLevel != AuthLevelEnum::A0; 

// SD6: in un servizio non pubblico tutte le operazioni devono avere almeno un ruolo associato
context Operation ERROR "Un operazione appartenente ad un servizio con security non A0 deve avere almeno un ruolo associato" :
   (((ServiceDef)this.eContainer).authLevel == AuthLevelEnum::A0) || 
   ((((ServiceDef)this.eContainer).authLevel != AuthLevelEnum::A0 && this.authorizedRoles.size>0));

// SD7: in un servizio non pubblico ci deve essere almeno un ruolo definito
context ServiceDef ERROR "Il servizio (con security non 'A0') deve definire almeno un ruolo" :
    (this.authLevel!=AuthLevelEnum::A0 && this.roles.size!=0) || authLevel == AuthLevelEnum::A0;
    

////// WARNINGS ///////////////////////////////////
context Operation WARNING "Tipo di ritorno non specificato per operazione "+name+": assumo che sia VOID" :
	this.returnType != null;
	
